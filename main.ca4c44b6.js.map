{"version":3,"sources":["scripts/main.js"],"names":["list","document","querySelector","sortList","employeeslist","employees","getEmployees","sort","person1","person2","salary1","convertSalaryToNum","salary","salary2","innerHTML","map","person","position","age","name","join","parsedEmployees","children","item","innerText","dataset","replace"],"mappings":";AAAA,aAyCC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAvCD,IAAMA,EAAOC,SAASC,cAAc,MAIpC,SAASC,EAASC,GACVC,IAAAA,EAAYC,EAAaF,GAE/BC,EAAUE,KAAK,SAACC,EAASC,GACjBC,IAAAA,EAAUC,EAAmBH,EAAQI,QAGpCC,OAFSF,EAAmBF,EAAQG,QAE1BF,IAGnBN,EAAcU,UAAYT,EAAUU,IAAI,SAAAC,GAEnBA,MAAAA,qCAAAA,OAAAA,EAAOC,SACTD,0BAAAA,OAAAA,EAAOJ,OACVI,uBAAAA,OAAAA,EAAOE,IAEjBF,oBAAAA,OAAAA,EAAOG,KANiC,uBAQzCC,KAAK,IAGZ,SAASd,EAAaF,GASbiB,OARiB,EAAIjB,EAAckB,UACvCP,IAAI,SAAAQ,GAAS,MAAA,CACZJ,KAAMI,EAAKC,UACXP,SAAUM,EAAKE,QAAQR,SACvBL,OAAQW,EAAKE,QAAQb,OACrBM,IAAKK,EAAKE,QAAQP,OAMxB,SAASP,EAAmBC,GACnB,OAACA,EAAOc,QAAQ,QAAS,IApClCvB,EAASH","file":"main.ca4c44b6.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst list = document.querySelector('ul');\n\nsortList(list);\n\nfunction sortList(employeeslist) {\n  const employees = getEmployees(employeeslist);\n\n  employees.sort((person1, person2) => {\n    const salary1 = convertSalaryToNum(person1.salary);\n    const salary2 = convertSalaryToNum(person2.salary);\n\n    return salary2 - salary1;\n  });\n\n  employeeslist.innerHTML = employees.map(person => `\n      <li\n      data-position=\"${person.position}\"\n      data-salary=\"${person.salary}\"\n      data-age=\"${person.age}\"\n    >\n      ${person.name}\n    </li>\n    `).join('');\n}\n\nfunction getEmployees(employeeslist) {\n  const parsedEmployees = [...employeeslist.children]\n    .map(item => ({\n      name: item.innerText,\n      position: item.dataset.position,\n      salary: item.dataset.salary,\n      age: item.dataset.age,\n    }));\n\n  return parsedEmployees;\n}\n\nfunction convertSalaryToNum(salary) {\n  return +salary.replace(/[$,]/g, '');\n}\n"]}